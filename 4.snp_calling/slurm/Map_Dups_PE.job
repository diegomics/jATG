#!/bin/bash

#SBATCH -J Map_Dups

#SBATCH --cpus-per-task=24
#SBATCH --mem=64G
#SBATCH --time=2-00:00:00

export PATH="${CONDA_BIN_DIR}:${PATH}"
source activate jATG_env

${SINGULARITY_LOAD}


cd ${OUT_DIR}/jATG/${SPECIES_NAME}/${ASSEMBLY_ID}/${SAMPLE_NAME}/4.calling/1_BAMs

if [[ "${ASSEMBLY##*.}" == "gz" ]]
then
        INTER=$(basename ${ASSEMBLY} .gz)
        ASSEMBLY_NAME=$(basename $INTER .${INTER##*.})
elif  [[ "${ASSEMBLY##*.}" == "fa" ]] || [[ "${ASSEMBLY##*.}" == "fasta" ]] || [[ "${ASSEMBLY##*.}" == "fna" ]]
then
        ASSEMBLY_NAME=$(basename $ASSEMBLY .${ASSEMBLY##*.})
else
        echo "Invalid reference extension name!"
fi


###############################################################################
echo ""
echo ". Starting bwa-mem2 & samtools..."
echo ""
READ1=$(ls ${TRIMMED_READS_DIR}/*{1.trim*fq,1.fq,1.trim*fastq,1.fastq}.gz 2>/dev/null | sort | uniq | head -n ${SLURM_ARRAY_TASK_ID} | tail -n 1)
READ1_NAME=$(basename $READ1)
if [[ $READ1 == *1.trim*fq.gz ]]; then
	READ_ID=${READ1_NAME%%1.trim*fq.gz}
	READ2_NAME=${READ1_NAME%%1.trim*fq.gz}2.${READ1#*1.}

elif [[ $READ1 == *1.fq.gz ]]; then
	READ_ID=${READ1_NAME%%1.fq.gz}
	READ2_NAME=${READ1_NAME%%1.fq.gz}2.${READ1#*1.}

elif [[ $READ1 == *1.trim*fastq.gz ]]; then
	READ_ID=${READ1_NAME%%1.trim*fastq.gz}
	READ2_NAME=${READ1_NAME%%1.trim*fastq.gz}2.${READ1#*1.}

elif [[ $READ1 == *1.fastq.gz ]]; then
	READ_ID=${READ1_NAME%%1.fastq.gz}
	READ2_NAME=${READ1_NAME%%1.fastq.gz}2.${READ1#*1.}

else
	echo "Error: Invalid read name"

fi

#if [ -z "${MULTI_RUN}" ]
#then
#      SAMPLE_NAME="${READ_NAME}"
#else
#      echo "Mapping data for the sample name: ${SAMPLE_NAME}"
#fi

bwa-mem2 mem -t 24 -M \
-R "@RG\tID:${READ_ID}\tSM:${SAMPLE_NAME}" \
"${OUT_DIR}/jATG/${SPECIES_NAME}/${ASSEMBLY_ID}/${SAMPLE_NAME}/4.calling/0_idx/${ASSEMBLY_NAME}" \
${READ1} \
"${TRIMMED_READS_DIR}/${READ2_NAME}" | \
samtools view -@ 12 -b -u | \
samtools sort -@ 12 -o "${OUT_DIR}/jATG/${SPECIES_NAME}/${ASSEMBLY_ID}/${SAMPLE_NAME}/4.calling/1_BAMs/temp_${READ_ID}.bam"


###############################################################################
echo ""
echo ". Indexing bam..."
echo ""
samtools index temp_${READ_ID}.bam


###############################################################################
echo ""
echo ". Starting Picard..."
echo ""

export LC_ALL=C

singularity exec -B ${BIND_DIR}:${BIND_DIR} ${INSTALLATION_DIR}/containers/gatk_latest.sif gatk \
--java-options "-Xmx${SLURM_MEM_PER_NODE}M" MarkDuplicates \
-ASSUME_SORTED true \
-VALIDATION_STRINGENCY SILENT \
-MAX_FILE_HANDLES_FOR_READ_ENDS_MAP 1000 \
-I temp_${READ_ID}.bam \
-O ${READ_ID}.markdup.bam \
-M ${READ_ID}.markdup_metrics.txt \
-TMP_DIR ${TMPDIR}


###############################################################################
echo ""
echo ". Indexing bam..."
echo ""
samtools index ${READ_ID}.markdup.bam
